{"version":3,"sources":["reportWebVitals.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","useState","latitude","longitude","zoom","bearing","pitch","showMarker","setViewport","domain","setDomain","undefined","result","setResult","handleSearchDomain","a","axios","get","data","location","old","lat","lng","className","type","placeholder","onChange","e","target","value","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ip","city","region","postalCode","timezon","isp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAYeA,G,MAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yECuGLQ,MA1Gf,WAAgB,IAAD,sBACqBC,mBAAS,CACrCC,SAAU,KACVC,WAAY,MACZC,KAAM,GACNC,QAAS,EACTC,MAAO,EACPC,YAAY,IAPL,mBACMC,GADN,aASiBP,mBAAS,IAT1B,mBASJQ,EATI,KASIC,EATJ,OAUiBT,wBAASU,GAV1B,mBAUJC,EAVI,KAUIC,EAVJ,KAYLC,EAAkB,uCAAG,kCAAAC,EAAA,sEACAC,IAAMC,IAAN,2FACiER,IAFjE,gBACfS,EADe,EACfA,KADe,SAIFA,QAJE,IAIFA,OAJE,EAIFA,EAAMA,KAAnBC,EAJe,EAIfA,SACRX,GAAY,SAACY,GAAD,mBAAC,eACNA,GADK,IAERlB,SAAQ,OAAEiB,QAAF,IAAEA,OAAF,EAAEA,EAAUE,IACpBlB,UAAS,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAUG,SAEzBT,EAAS,OAACK,QAAD,IAACA,OAAD,EAACA,EAAMA,MAVO,2CAAH,qDAaxB,OACI,sBAAMK,UAAU,8BAAhB,SACI,sBAAKA,UAAU,6DAAf,UACI,sBAAKA,UAAU,wDAAf,UACI,oBAAIA,UAAU,4CAAd,gCAGA,sBAAKA,UAAU,0CAAf,UACI,uBACIC,KAAK,OACLD,UAAU,+DACVE,YAAY,6CACZC,SAAU,SAACC,GAAD,OAAOjB,EAAUiB,EAAEC,OAAOC,QACpCA,MAAOpB,IAEX,wBACIe,KAAK,SACLD,UAAU,0EACVO,QAAShB,EAHb,SAKI,qBACIiB,MAAM,6BACNR,UAAU,UACVS,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,2BAMtB,sBAAKf,UAAU,wLAAf,UACI,sBAAKA,UAAU,6FAAf,UACI,oBAAIA,UAAU,iDAAd,wBAGA,mBAAGA,UAAU,qCAAb,0BACKX,QADL,IACKA,OADL,EACKA,EAAQ2B,UADb,QACmB,uBAGvB,sBAAKhB,UAAU,yHAAf,UACI,oBAAIA,UAAU,iDAAd,sBACA,mBAAGA,UAAU,qCAAb,oCACIX,QADJ,IACIA,GADJ,UACIA,EAAQO,gBADZ,aACI,EAAkBqB,YADtB,QAC8B,WAD9B,8BAEK5B,QAFL,IAEKA,GAFL,UAEKA,EAAQO,gBAFb,aAEK,EAAkBsB,cAFvB,QAEiC,KAFjC,6BAGI7B,QAHJ,IAGIA,GAHJ,UAGIA,EAAQO,gBAHZ,aAGI,EAAkBuB,kBAHtB,QAGoC,cAGxC,sBAAKnB,UAAU,yHAAf,UACI,oBAAIA,UAAU,iDAAd,sBACA,mBAAGA,UAAU,qCAAb,0BACKX,QADL,IACKA,GADL,UACKA,EAAQO,gBADb,aACK,EAAkBwB,eADvB,QACkC,iBAGtC,sBAAKpB,UAAU,0FAAf,UACI,oBAAIA,UAAU,iDAAd,iBACA,mBAAGA,UAAU,qCAAb,0BACKX,QADL,IACKA,OADL,EACKA,EAAQgC,WADb,QACoB,0BAI5B,qBAAKrB,UAAU,0DC1F/BsB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5B1D,M","file":"static/js/main.c5be0b5d.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import { useState } from 'react'\nimport axios from 'axios'\nimport ReactMapGL from 'react-map-gl'\n\nfunction App() {\n    const [viewport, setViewport] = useState({\n        latitude: 37.8,\n        longitude: -122.4,\n        zoom: 14,\n        bearing: 0,\n        pitch: 0,\n        showMarker: true,\n    })\n    const [domain, setDomain] = useState('')\n    const [result, setResult] = useState(undefined)\n\n    const handleSearchDomain = async () => {\n        const { data } = await axios.get(\n            `https://api.ipify.org?format=json&apiKey=at_NNUTa2GZLigXOU64xdT3tdc6XjltL&domain=${domain}`\n        )\n        const { location } = data?.data\n        setViewport((old) => ({\n            ...old,\n            latitude: location?.lat,\n            longitude: location?.lng,\n        }))\n        setResult(data?.data)\n    }\n\n    return (\n        <main className=\"App grid place-items-center\">\n            <div className=\"bg-hero-pattern w-full h-[350px] md:h-[240px] object-cover\">\n                <div className=\"w-[90%] mx-auto flex justify-center flex-col p-4 mb-8\">\n                    <h1 className=\"mt-3 mb-5 text-2xl text-center text-white\">\n                        IP Address Tracker\n                    </h1>\n                    <div className=\"flex items-center w-full justify-center\">\n                        <input\n                            type=\"text\"\n                            className=\"form-input rounded-tl-lg rounded-bl-lg w-full md:max-w-[50%]\"\n                            placeholder=\"Search for any domain (e.g., facebook.com)\"\n                            onChange={(e) => setDomain(e.target.value)}\n                            value={domain}\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"max-w-[100px] text-white bg-black px-4 py-3 rounded-tr-lg rounded-br-lg\"\n                            onClick={handleSearchDomain}\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-4 w-5\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M9 5l7 7-7 7\"\n                                />\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"z-20 absolute top-30 left-0 right-0 shadow-md md:space-x-8 rounded-lg bg-white px-4 py-8 w-[90%] md:w-[95%] lg:w-[75%] mx-auto h-[350px] md:h-[150px] grid grid-cols-1 md:grid-cols-4\">\n                    <div className=\"mb-4 md:mb-0 text-center md:text-left col-start-1 col-end-2 md:border-r md:border-gray-200\">\n                        <h3 className=\"uppercase mb-2 text-sm text-gray-400 font-bold\">\n                            IP Address\n                        </h3>\n                        <p className=\"text-2xl font-medium text-gray-700\">\n                            {result?.ip ?? '192.212.174.101'}\n                        </p>\n                    </div>\n                    <div className=\"mb-4 md:mb-0 text-center md:text-left col-start-1 md:border-r md:border-gray-200 col-end-2 md:col-start-2 md:col-end-3\">\n                        <h3 className=\"uppercase mb-2 text-sm text-gray-400 font-bold\">Location</h3>\n                        <p className=\"text-2xl font-medium text-gray-700\">{`${\n                            result?.location?.city ?? 'Brooklyn'\n                        }, ${result?.location?.region ?? 'NY'} ${\n                            result?.location?.postalCode ?? '10001'\n                        }`}</p>\n                    </div>\n                    <div className=\"mb-4 md:mb-0 text-center md:text-left col-start-1 md:border-r md:border-gray-200 col-end-2 md:col-start-3 md:col-end-4\">\n                        <h3 className=\"uppercase mb-2 text-sm text-gray-400 font-bold\">Timezone</h3>\n                        <p className=\"text-2xl font-medium text-gray-700\">\n                            {result?.location?.timezon ?? 'UTC -5:00'}\n                        </p>\n                    </div>\n                    <div className=\"mb-4 md:mb-0 text-center md:text-left col-start-1 col-end-2 md:col-start-4 md:col-end-5\">\n                        <h3 className=\"uppercase mb-2 text-sm text-gray-400 font-bold\">ISP</h3>\n                        <p className=\"text-2xl font-medium text-gray-700\">\n                            {result?.isp ?? 'SpaceX Starlink'}\n                        </p>\n                    </div>\n                </div>\n                <div className=\"relative h-screen mt-[210px] md:mt-[100px] z-10\">\n                    {/* <ReactMapGL\n                        {...viewport}\n                        width=\"100%\"\n                        height=\"100%\"\n                        onViewportChange={(view) => setViewport(view)}\n                        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                    /> */}\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}